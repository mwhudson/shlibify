#!/usr/bin/perl

package main;

use strict;
use warnings;

# Convert a Go package to build shared libraries.
#
# This involves:
# 1) Adding a new binary package libgolang-${foo}1.
# 2) Converting the -dev package to be an 'any' vs 'all' package.
# 3) Making the -dev packge depend on the lib package.
# 4) Adding golang-any-shared-dev as a build dependency.
# 5) (TBD) Adding an or updating the .install file for the -dev
#    package to include /usr/lib/*/gocode.
# 6) Call dch with appropriate arguments.
# 7) Call update-maintainer.

use Cwd qw(:DEFAULT abs_path);
use Dpkg::Control;
use Dpkg::Control::Info;
use Dpkg::Deps;

sub append_dep  {
    my $s = shift;
    my $d = shift;
    if ($s =~ /.*(,\n +).*/) {
        $s .= $1;
    } else {
        $s .= ", ";
    }
    $s .= $d;
}

sub main() {
    my $control = Dpkg::Control::Info->new();
    foreach my $pkg (@{$control->{packages}}) {
        # We process the first thing that looks like a -dev package (sometimes there
        # is more than one, but we assume later ones are transitional packages to
        # cover package renames).
        if ($pkg->{Package} =~ /(golang-.*)-dev/) {
            my $libpkgname = "lib" . $1;
            if ($libpkgname =~ /[0-9]$/) {
                $libpkgname .= "-";
            }
            $libpkg .= "1";
            my $libpkg = Dpkg::Control->new((type => CTRL_INDEX_PKG));
            $libpkg->{Package} = $libpkgname;
            $libpkg->{Architecture} = "any";
            $libpkg->{Depends} = '${misc:Depends}, ${shlibs:Depends}';
            $libpkg->{Provides} = '${golang:Provides}';
            $libpkg->{Description} = $pkg->{Description};
            push @{$control->{packages}}, $libpkg;

            $pkg->{Architecture} = "any";
            $pkg->{Depends} = append_dep($pkg->{Depends}, "$libpkgname (= \${binary:Version})");

            open(my $fh2, ">", "debian/$libpkgname.lintian-overrides");
            printf $fh2 "%s: no-symbols-control-file\n", $libpkgname;
            printf $fh2 "%s: dev-pkg-without-shlib-symlink\n", $libpkgname;
            close($fh2);

            # TBD: add/update debian/$pkg.install

            last;
        }
    }
    my $src = $control->get_source();
    $src->{"Build-Depends"} = append_dep($src->{"Build-Depends"}, "golang-any-shared-dev");
    my $fh;
    open($fh, ">", "debian/control");
    printf $fh "%s", $control;
    close($fh);
    system("dch", "-i", "-D", "yakkety", "Build shared lib package.");
    system("update-maintainer");
}

main();
